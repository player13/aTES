version: "3"
services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: OUTSIDE://:9092,CONTROLLER://:9093,INSIDE://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: OUTSIDE://localhost:9092,INSIDE://kafka:9094
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: OUTSIDE
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

  schema-registry:
    image: docker.io/bitnami/schema-registry:latest
    ports:
      - '9091:9091'
    depends_on:
      - kafka
    environment:
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:9091
      - SCHEMA_REGISTRY_KAFKA_BROKERS=PLAINTEXT://kafka:9094

  akhq:
    # build:
    #   context: .
    image: tchiotludo/akhq:latest
    ports:
      - 9000:8080
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: kafka:9094
              schema-registry:
                url: http://schema-registry:9091
                type: confluent

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: auth_user:auth_password@auth,task_user:task_password@task,accounting_user:accounting_password@accounting,analytics_user:analytics_password@analytics
    volumes:
      - ./docker-postgresql-multiple-databases.sh:/docker-entrypoint-initdb.d/init.sh
